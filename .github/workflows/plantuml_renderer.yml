name: Render PlantUML Diagrams

# This action runs on pushes to the main or master branches.
on:
  push:
    branches:
      - main
      - master

# Concurrency control ensures that only the latest push for a branch will run,
# cancelling any older, in-progress runs.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  render_diagrams:
    name: Draw and Commit Diagrams
    runs-on: ubuntu-latest
    # Timeout prevents the job from running indefinitely.
    timeout-minutes: 5

    # Explicitly set permissions for the job for security best practices.
    # 'contents: write' is required for the action to push commits back to the repo.
    permissions:
      contents: write

    steps:
      # Step 1: Check out the repository's code.
      # Using a stable major version like @v4 is recommended.
      - name: Check out repository
        uses: actions/checkout@v4

      # Step 2: Render diagrams using the official PlantUML action.
      # @v2 is the latest stable major release for this action.
      - name: Render PlantUML diagrams
        uses: plantuml/plantuml-action@v2
        with:
          # Arguments tell PlantUML to create PNGs for all .puml files in the diagrams folder.
          args: "-tpng diagrams/*.puml"

      # Step 3: Commit the newly generated PNG files back to the repository.
      - name: Commit generated diagrams
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add diagrams/*.png
          
          # This check prevents empty commits if the diagrams haven't changed.
          if git diff --staged --quiet; then
            echo "No changes in diagrams to commit."
          else
            git commit -m "Auto-generate PlantUML diagrams"
            git push
          fi